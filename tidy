#!/bin/bash
set -e
ARCHIVE_PATH="$HOME/.archive"

# getopt
SHORT_OPTS="ar"
LONG_OPTS="archive,rsync,only-archive"
PARSED_OPTS=$(getopt --options $SHORT_OPTS --longoptions $LONG_OPTS --name "$0" -- "$@")
if [[ $? -ne 0 ]]; then
  echo "Wrong Input!" >&2
  exit 2
fi
eval set -- "$PARSED_OPTS" # Strings after `--` will be treated as parameters

unset SHORT_OPTS LONG_OPTS PARSED_OPTS

# reading options
mode=""
only_archive=""

while true; do
  case $1 in
    -a|--archive)
      if [[ -z $mode ]]; then
        mode="archive"
      elif [[ $mode != "archive" ]]; then
        echo "Sorry, we can only do same type of things at once." >&2
        exit 2
      fi
      shift
      ;;
    -r|--rsync)
      if [ -z $mode ]; then
        mode="rsync"
      elif [[ $mode != "rsync" ]]; then
        echo "Sorry, we can only do same type of things at once." >&2
        exit 2
      fi
      shift
      ;;
    --only-archive)
      if [[ $mode == "rsync" ]]; then
        only_archive="y"
      else
        echo "Option '--only-archive' should come after '-r|--rsync'" >&2
        exit 2
      fi
      shift
      ;;
    --)
      shift
      break
      ;;
    *)
      echo "Wrong Input!" >&2
      exit 2
      ;;
  esac
done

# parameters: $@
case $mode in 
  archive)
    for file in "$@"; do
      if [[ "$file" == */* ]]; then
        # `file` is a path
        if [[ "$(basename "$file")" == .* ]]; then
          echo "Wrong Path!" >&2
          exit 1
        fi
        if [[ "$file" == $HOME/.archive/* ]]; then
          # reduce
          date_basename=$(basename "$file")
          inital_basename=${date_basename:6}
          mv "$file" "$HOME/$inital_basename"
        elif [[ "$file" == $HOME/* ]]; then
          # archive
          mv "$file" "$ARCHIVE_PATH/$(date +%y%m%d)$(basename $file)"
        else
          echo "Wrong Path!" >&2
          exit 1
        fi
      else
        # `file` is a name
        if [[ "$file" == .* ]]; then
          echo "Wrong Name!" >&2
          exit 1
        fi
        if [[ -e "$HOME/$file" ]]; then
          # archive
          mv "$HOME/$file" "$ARCHIVE_PATH/$(date +%y%m%d)$file"
        else
          # reduce
          matched_archives=( $(echo $ARCHIVE_PATH/$(date +%y)[0-9][0-9][0-9][0-9]$file) )
          match_number=${#matched_archives[@]}
          case $match_number in
            0)
              echo "Wrong Name!" >&2
              exit 1
              ;;
            1)
              mv "${matched_archives[0]}" "$HOME/$file"
              ;;
            *)
              for matched_archive in "${matched_archives[@]}"; do
                read -p "Reduce this archive '$matched_archive'?(y/n):" confirm_reduce
                if [[ "$confirm_reduce" == "y" ]]; then
                  mv "$matched_archive" "$HOME/$file"
                  break
                fi
              done
              ;;
          esac
        fi
      fi
    done
    ;;
  rsync)
    case $# in
      0)
        rsync_from="$HOME"
        rsync_to="/mnt"
        ;;
      1)
        rsync_from="$HOME"
        rsync_to="$1"
        ;;
      2)
        rsync_from="$1"
        rsync_to="$2"
        ;;
      *)
        echo "Too many parameters!" >&2
        exit 2
        ;;
    esac
    if [[ !( -d "$rsync_from" && -d "$rsync_to" ) ]]; then
      echo "Path doesn't exist!" >&2 
      exit 1
    fi

    if [[ -z "$only_archive" ]]; then
    rsync -rlptH --delete --exclude "/.*" --progress "$rsync_from/" "$rsync_to/"
    sudo rsync -aH --delete --progress "$rsync_from/.usr" "$rsync_to/"
    fi
    rsync -rlptH --progress "$rsync_from/.archive" "$rsync_to/"
    ;;
esac
